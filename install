#!/usr/bin/env bash
clear

RED="\e[31m";
GREEN="\e[32m";
YELLOW="\e[33m";
IBGGREEN="\e[1;102m";
PLAIN="\e[0m";

GETIP=$( wget -qO- icanhazip.com );
GETHOST=$( cat /etc/hostname );

if [ "$EUID" -ne 0 ]; then
  echo -e "${RED}Skrip perlu dijalankan sebagai root!${PLAIN}"; exit 1
fi

. /etc/os-release
if [[ $ID == "debian" ]]; then
  if [[ $VERSION_ID -ne 10 ]]; then
    echo -e "${RED}Skrip hanya boleh digunakan pada Debian 10 sahaja!${PLAIN}"; exit 3
  fi
else
  echo -e "${RED}Skrip hanya menyokong sistem operasi debian sahaja!${PLAIN}"; exit 2
fi

echo ""
echo "============================================================"
echo -e "\t${YELLOW} ╦╔═╗╦╔═╔═╗╦═╗╦  ╦╔═╗╔╗╔${PLAIN}  OS: ${GREEN}Debian $VERSION_ID${PLAIN}";
echo -e "\t${YELLOW} ║║ ║╠╩╗║╣ ╠╦╝╚╗╔╝╠═╝║║║${PLAIN}  IP: ${GREEN}$GETIP${PLAIN}";
echo -e "\t${YELLOW}╚╝╚═╝╩ ╩╚═╝╩╚═ ╚╝ ╩  ╝╚╝${PLAIN}  HOST: ${GREEN}$GETHOST${PLAIN}";
echo "============================================================"
echo ""

echo -n "Kemas kini & pasang kebergantungan... ";
apt-get -qq update &>/dev/null && apt-get -y -qq upgrade &>/dev/null
apt-get -y -qq install curl git jq cmake automake unzip autoconf dnsutils qrencode libsodium* &>/dev/null
apt-get -y -qq install libtool libssl-dev libpcre3-dev libev-dev asciidoc xmlto rng-tools &>/dev/null
apt-get -y -qq install apt-transport-https software-properties-common build-essential &>/dev/null
apt-get -qq update &>/dev/null && apt-get -y -qq upgrade &>/dev/null
echo -e "${GREEN}[ Selesai ]${PLAIN}";

timedatectl set-timezone Asia/Kuala_Lumpur

systemctl stop rng-tools &>/dev/null
echo "HRNGDEVICE=/dev/urandom" >> /etc/default/rng-tools
systemctl start rng-tools &>/dev/null
sleep 3

echo "deb http://ftp.debian.org/debian buster-backports main
deb-src http://ftp.debian.org/debian buster-backports main" >> /etc/apt/sources.list

echo "kernel.printk = 4 4 1 7 
kernel.panic = 10 
kernel.sysrq = 0 
kernel.shmmax = 4294967296 
kernel.shmall = 4194304 
kernel.core_uses_pid = 1 
kernel.msgmnb = 65536 
kernel.msgmax = 65536 
vm.swappiness = 20 
vm.dirty_ratio = 80 
vm.dirty_background_ratio = 5 
fs.file-max = 2097152 
net.core.netdev_max_backlog = 262144 
net.core.rmem_default = 31457280 
net.core.rmem_max = 67108864 
net.core.wmem_default = 31457280 
net.core.wmem_max = 67108864 
net.core.somaxconn = 65535 
net.core.optmem_max = 25165824 
net.ipv4.neigh.default.gc_thresh1 = 4096 
net.ipv4.neigh.default.gc_thresh2 = 8192 
net.ipv4.neigh.default.gc_thresh3 = 16384 
net.ipv4.neigh.default.gc_interval = 5 
net.ipv4.neigh.default.gc_stale_time = 120 
net.ipv4.tcp_slow_start_after_idle = 0 
net.ipv4.ip_local_port_range = 1024 65000 
net.ipv4.ip_no_pmtu_disc = 1 
net.ipv4.route.flush = 1 
net.ipv4.route.max_size = 8048576 
net.ipv4.icmp_echo_ignore_broadcasts = 1 
net.ipv4.icmp_ignore_bogus_error_responses = 1 
net.ipv4.tcp_congestion_control = htcp 
net.ipv4.tcp_mem = 65536 131072 262144 
net.ipv4.udp_mem = 65536 131072 262144 
net.ipv4.tcp_rmem = 4096 87380 33554432 
net.ipv4.udp_rmem_min = 16384 
net.ipv4.tcp_wmem = 4096 87380 33554432 
net.ipv4.udp_wmem_min = 16384 
net.ipv4.tcp_max_tw_buckets = 1440000 
net.ipv4.tcp_tw_reuse = 1 
net.ipv4.tcp_max_orphans = 400000 
net.ipv4.tcp_window_scaling = 1 
net.ipv4.tcp_rfc1337 = 1 
net.ipv4.tcp_syncookies = 1 
net.ipv4.tcp_synack_retries = 1 
net.ipv4.tcp_syn_retries = 2 
net.ipv4.tcp_max_syn_backlog = 16384 
net.ipv4.tcp_timestamps = 1 
net.ipv4.tcp_sack = 1 
net.ipv4.tcp_fack = 1 
net.ipv4.tcp_ecn = 2 
net.ipv4.tcp_fin_timeout = 10 
net.ipv4.tcp_keepalive_time = 600 
net.ipv4.tcp_keepalive_intvl = 60 
net.ipv4.tcp_keepalive_probes = 10 
net.ipv4.tcp_no_metrics_save = 1 
net.ipv4.ip_forward = 1 
net.ipv4.conf.all.accept_redirects = 0 
net.ipv4.conf.all.send_redirects = 0 
net.ipv4.conf.all.accept_source_route = 0 
net.ipv4.conf.all.rp_filter = 1
net.ipv6.conf.all.disable_ipv6 = 1
net.core.default_qdisc = fq
net.ipv4.tcp_fastopen = 3
net.ipv4.tcp_mtu_probing = 1
net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_congestion_control = hybla" > /etc/sysctl.conf
sysctl -p &>/dev/null

echo "/bin/false
/usr/bin/false" >> /etc/shells

echo '# ~/.profile: executed by Bourne-compatible login shells.
if [ "$BASH" ]; then
  if [ -f ~/.bashrc ]; then
    . ~/.bashrc
  fi
fi

mesg n || true
ulimit -n 51200' > ~/.profile
source ~/.profile

echo '</br>
=========================================</b><br>
<font color="gren"><b>TERMS OF SERVICE</b></font><br>
=========================================</b><br>
<font color="yellow"><b>NO SPAM</b></font><br>
<font color="yellow"><b>NO DDOS</b></font><br>
<font color="yellow"><b>NO HACKING</b></font><br>
<font color="yellow"><b>NO CARDING</b></font><br>
<font color="yellow"><b>NO MULTI LOGIN</b></font><br>
-----------------------------------------<br>
<font color="red"><b>OR ACCOUNT WILL BE BANNED</b></font><br>
=========================================<br>
<font color="gren"><b>COPYRIGHT JOKERVPN, POWERED BY CYBERTIZE.</b></font><br>
=========================================
</br>' > /etc/issue.net

#################################
# INSTALL # BADVPN PACKAGE
#################################
echo -n "Pasang pakej badvpn-udpgw... "; sleep 3
apt-get -y -qq install curl cmake make &>/dev/null
wget -q "https://github.com/ambrop72/badvpn/archive/refs/tags/1.999.130.tar.gz"
tar xzf 1.999.130.tar.gz
cd badvpn-1.999.130
cmake -DBUILD_NOTHING_BY_DEFAULT=1 -DBUILD_UDPGW=1 &>/dev/null
make install &>/dev/null
mv /usr/local/bin/badvpn-udpgw /usr/bin/

echo "[Unit]
Description=Badvpn-udpgw Service
Documentation=https://github.com/ambrop72/
After=network.target

[Service]
Type=simple
ExecStart=/usr/bin/badvpn-udpgw --listen-addr 127.0.0.1:7300
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target" > /etc/systemd/system/badvpn-udpgw.service
systemctl daemon-reload &>/dev/null
systemctl start badvpn-udpgw &>/dev/null
systemctl enable badvpn-udpgw &>/dev/null
echo -e "${GREEN}[ Selesai ]${PLAIN}"; cd

#################################
# INSTALL # DROPBEAR PACKAGE
#################################
echo -n "Pasang pakej dropbear... "; sleep 3
DEBIAN_FRONTEND=noninteractive apt-get -y -qq install dropbear &>/dev/null
echo 'NO_START=0
DROPBEAR_PORT=143
DROPBEAR_EXTRA_ARGS="-p 442"
DROPBEAR_BANNER="/etc/issue.net"
DROPBEAR_RSAKEY="/etc/dropbear/dropbear_rsa_host_key"
DROPBEAR_DSSKEY="/etc/dropbear/dropbear_dss_host_key"
DROPBEAR_ECDSAKEY="/etc/dropbear/dropbear_ecdsa_host_key"
DROPBEAR_RECEIVE_WINDOW=65536' > /etc/default/dropbear
echo -e "${GREEN}[ Selesai ]${PLAIN}"; cd

#################################
# INSTALL # OPENVPN PACKAGE
#################################
echo -n "Pasang pakej openvpn... ";
apt-get -y -qq install openvpn &>/dev/null
cd /usr/share/easy-rsa
./easyrsa --batch init-pki &>/dev/null
./easyrsa --batch build-ca nopass &>/dev/null
./easyrsa --batch gen-dh &>/dev/null
./easyrsa --batch build-server-full server nopass &>/dev/null
cp -R /usr/share/easy-rsa/pki /etc/openvpn/ && cd

if [[ -d /etc/openvpn/server ]]; then
  rm -d /etc/openvpn/server &>/dev/null
fi
systemctl stop openvpn &>/dev/null
systemctl disable openvpn &>/dev/null

echo "# OVPN SERVER-TCP CONFIG
# ----------------------------
setenv CLIENT_CERT 0
setenv FRIENDLY_NAME jokervpn
port 1194
proto tcp
dev tun

ca /etc/openvpn/pki/ca.crt
cert /etc/openvpn/pki/issued/server.crt
key /etc/openvpn/pki/private/server.key
dh /etc/openvpn/pki/dh.pem

verify-client-cert none
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push \"redirect-gateway def1 bypass-dhcp\"
push \"dhcp-option DNS 1.1.1.1\"
push \"dhcp-option DNS 1.0.0.1\"
keepalive 10 120
cipher AES-256-CBC
user nobody
group nogroup
persist-key
persist-tun
status /var/log/openvpn/status.log
log /var/log/openvpn/access.log
verb 3
mute 10
plugin /usr/lib/x86_64-linux-gnu/openvpn/plugins/openvpn-plugin-auth-pam.so login
username-as-common-name" > /etc/openvpn/server-tcp.conf

echo "# OVPN SERVER-UDP CONFIG
# ----------------------------
setenv CLIENT_CERT 0
setenv FRIENDLY_NAME jokervpn
port 994
proto udp
dev tun

ca /etc/openvpn/pki/ca.crt
cert /etc/openvpn/pki/issued/server.crt
key /etc/openvpn/pki/private/server.key
dh /etc/openvpn/pki/dh.pem

verify-client-cert none
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push \"redirect-gateway def1 bypass-dhcp\"
push \"dhcp-option DNS 1.1.1.1\"
push \"dhcp-option DNS 1.0.0.1\"
keepalive 10 120
cipher AES-256-CBC
user nobody
group nogroup
persist-key
persist-tun
status /var/log/openvpn/status.log
log /var/log/openvpn/access.log
verb 3
mute 10
plugin /usr/lib/x86_64-linux-gnu/openvpn/plugins/openvpn-plugin-auth-pam.so login
username-as-common-name" > /etc/openvpn/server-udp.conf

echo "# OVPN SERVER-TLS CONFIG
# ----------------------------
setenv CLIENT_CERT 0
setenv FRIENDLY_NAME jokervpn
port 587
proto tcp
dev tun

ca /etc/openvpn/pki/ca.crt
cert /etc/openvpn/pki/issued/server.crt
key /etc/openvpn/pki/private/server.key
dh /etc/openvpn/pki/dh.pem

verify-client-cert none
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push \"redirect-gateway def1 bypass-dhcp\"
push \"dhcp-option DNS 1.1.1.1\"
push \"dhcp-option DNS 1.0.0.1\"
keepalive 10 120
cipher AES-256-CBC
user nobody
group nogroup
persist-key
persist-tun
status /var/log/openvpn/status.log
log /var/log/openvpn/access.log
verb 3
mute 10
plugin /usr/lib/x86_64-linux-gnu/openvpn/plugins/openvpn-plugin-auth-pam.so login
username-as-common-name" > /etc/openvpn/server-tls.conf

echo "# OVPN CLIENT-TCP CONFIG
# ----------------------------
client
dev tun
proto tcp
remote $GETIP 1194
resolv-retry infinite
nobind
persist-key
persist-tun
remote-cert-tls server
cipher AES-256-CBC
auth none
verb 3

setenv CLIENT_CERT 0
setenv FRIENDLY_NAME jokervpn
auth-user-pass

;http-proxy-retry
;http-proxy $GETIP 8080
;http-proxy-option CUSTOM-HEADER Protocol HTTP/1.1
;http-proxy-option CUSTOM-HEADER Host HOSTNAME" > /etc/openvpn/client/client-tcp.conf

echo "" >> /etc/openvpn/client/client-tcp.conf
echo "<ca>" >> /etc/openvpn/client/client-tcp.conf
cat /etc/openvpn/pki/ca.crt >> /etc/openvpn/client/client-tcp.conf
echo "</ca>" >> /etc/openvpn/client/client-tcp.conf

echo "# OVPN CLIENT-UDP CONFIG
# ----------------------------
client
dev tun
proto udp
remote $GETIP 994
resolv-retry infinite
nobind
persist-key
persist-tun
remote-cert-tls server
cipher AES-256-CBC
auth none
verb 3

setenv CLIENT_CERT 0
setenv FRIENDLY_NAME jokervpn
auth-user-pass" > /etc/openvpn/client/client-udp.conf

echo "" >> /etc/openvpn/client/client-udp.conf
echo "<ca>" >> /etc/openvpn/client/client-udp.conf
cat /etc/openvpn/pki/ca.crt >> /etc/openvpn/client/client-udp.conf
echo "</ca>" >> /etc/openvpn/client/client-udp.conf

echo "# OVPN CLIENT-TLS CONFIG
# ----------------------------
client
dev tun
proto tcp
remote $GETIP 587
resolv-retry infinite
nobind
persist-key
persist-tun
remote-cert-tls server
cipher AES-256-CBC
auth none
verb 3

setenv CLIENT_CERT 0
setenv FRIENDLY_NAME jokervpn
auth-user-pass" > /etc/openvpn/client/client-tls.conf

echo "" >> /etc/openvpn/client/client-tls.conf
echo "<ca>" >> /etc/openvpn/client/client-tls.conf
cat /etc/openvpn/pki/ca.crt >> /etc/openvpn/client/client-tls.conf
echo "</ca>" >> /etc/openvpn/client/client-tls.conf

sed -i 's/#AUTOSTART="all"/AUTOSTART="all"/g' /etc/default/openvpn
systemctl start openvpn &>/dev/null
systemctl enable openvpn &>/dev/null
echo -e "${GREEN}[ Selesai ]${PLAIN}"; cd

#################################
# INSTALL # SQUID3 PACKAGE
#################################
echo -n "Pasang pakej squid... "; sleep 3
apt-get -y -qq install squid &>/dev/null
echo "# CYBERTIZE SQUID CONFIG
# ----------------------------
acl localnet src 0.0.0.1-0.255.255.255
acl localnet src 10.0.0.0/8
acl localnet src 100.64.0.0/10
acl localnet src 169.254.0.0/16
acl localnet src 172.16.0.0/12
acl localnet src 192.168.0.0/16
acl localnet src fc00::/7
acl localnet src fe80::/10

acl SSL_ports port 443
acl Safe_ports port 80
acl Safe_ports port 21
acl Safe_ports port 443
acl Safe_ports port 70
acl Safe_ports port 210
acl Safe_ports port 1025-65535
acl Safe_ports port 280
acl Safe_ports port 488
acl Safe_ports port 591
acl Safe_ports port 777
acl CONNECT method CONNECT
acl cybertize dst $GETIP/20

http_access allow cybertize
http_access allow localnet
http_access allow localhost
http_access allow manager localhost
http_access deny manager
http_access deny all
http_port 8080
http_port 8000

cache deny all
access_log none
cache_store_log none
cache_log /dev/null
hierarchy_stoplist cgi-bin ?

refresh_pattern ^ftp: 1440 20%	10080
refresh_pattern ^gopher: 1440 0% 1440
refresh_pattern -i (/cgi-bin/|\?) 0	0% 0
refresh_pattern . 0	20%	4320
visible_hostname proxy.jokervpn.com" > /etc/squid/squid.conf
echo -e "${GREEN}[ Selesai ]${PLAIN}"; cd

#################################
# INSTALL # STUNNEL4 PACKAGE
#################################
echo -n "Pasang pakej stunnel... "; sleep 3
apt-get -y -qq install stunnel &>/dev/null
if [[ ! -d /etc/stunnel/pki ]]; then
  mkdir /etc/stunnel/pki
fi

openssl req -new -x509 -days 720 -nodes \
-subj '/C=DO/ST=VPS/L=Debian/O="Cybertize"/OU="Joker VPN"/CN=jokervpn.com' \
-out /etc/stunnel/pki/stunnel.pem -keyout /etc/stunnel/pki/stunnel.pem &>/dev/null

# /etc/stunnel/stunnel.conf
echo "pid = /var/run/stunnel4/stunnel.pid
output = /var/log/stunnel4/stunnel.log
cert = /etc/stunnel/pki/stunnel.pem
debug = 4
client = no
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1

[dropbear]
accept = 443
connect = 127.0.0.1:143

[openvpn]
accept = 587
connect = 127.0.0.1:1194" > /etc/stunnel/stunnel.conf

# /etc/default/stunnel
echo 'ENABLED=1
FILES="/etc/stunnel/*.conf"
OPTIONS=""
PPP_RESTART=0
RLIMITS=""' > /etc/default/stunnel4
echo -e "${GREEN}[ Selesai ]${PLAIN}"; cd

#################################
# INSTALL # NGINX PACKAGE
#################################
echo -n "Pasang pakej nginx... "; sleep 3
apt-get -y -qq install nginx &>/dev/null
echo "<!doctype html>
<html lang=\"en\">
  <head>
    <!-- Required meta tags -->
    <meta charset=\"utf-8\">
    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">

    <!-- Bootstrap CSS -->
    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\">

    <title>Joker VPN</title>
  </head>
  <body>
    <h1><center>${GETHOST}</center></h1>

    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\"></script>
  </body>
</html>" > /var/www/html/index.nginx-debian.html

cp /etc/openvpn/client/client-tcp.conf /var/www/html/client-tcp.ovpn
cp /etc/openvpn/client/client-udp.conf /var/www/html/client-udp.ovpn
cp /etc/openvpn/client/client-tls.conf /var/www/html/client-tls.ovpn
echo -e "${GREEN}[ Selesai ]${PLAIN}"; cd

###############################
# INSTALL # WEBMIN PACKAGE
###############################
echo -n "Pasang pakej webmin... "; sleep 3
wget -qO - http://www.webmin.com/jcameron-key.asc | apt-key add - &>/dev/null
echo "deb http://download.webmin.com/download/repository sarge contrib" | tee /etc/apt/sources.list.d/webmin.list &>/dev/null
apt-get -qq update && apt-get -y -qq install webmin &>/dev/null
echo -e "${GREEN}[ Selesai ]${PLAIN}"; cd

#################################
# INSTALL # FAIL2BAN PACKAGE
#################################
echo -n "Pasang pakej fail2ban... "; sleep 3
apt-get -y -qq install fail2ban &>/dev/null
cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
echo -e "${GREEN}[ Selesai ]${PLAIN}"; cd

#################################
# INSTALL # DDoS-Deflate
#################################
echo -n "Pasang ddos-deflate... "; sleep 3
apt-get -y -qq install net-tools &>/dev/null
apt-get -y -qq install tcpdump &>/dev/null
apt-get -y -qq install dsniff &>/dev/null
apt-get -y -qq install grepcidr &>/dev/null

wget -O ddos.zip https://github.com/jgmdev/ddos-deflate/archive/master.zip &>/dev/null
unzip ddos.zip &>/dev/null
cd ddos-deflate-master
./install.sh &>/dev/null
echo -e "${GREEN}[ Selesai ]${PLAIN}"; cd

#################################
# INSTALL # IPTABLES PACKAGE
#################################
echo -n "Pasang pakej iptables... "; sleep 3
apt-get -y -qq netfilter-persistent &>/dev/null

iptables -F
iptables -F INPUT
iptables -F OUTPUT
iptables -F FORWARD
iptables -F -t mangle
iptables -F -t nat
iptables -X && iptables -Z

iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT ! -i lo -d 127.0.0.1/8 -j DROP

iptables -A INPUT -i tun+ -j ACCEPT
iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE

iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -m state --state INVALID -j REJECT

iptables -A INPUT -m string --string "BitTorrent" --algo bm --to 65535 -j DROP
iptables -A INPUT -m string --string "BitTorrent protocol" --algo bm --to 65535 -j DROP
iptables -A INPUT -m string --string "peer_id=" --algo bm --to 65535 -j DROP
iptables -A INPUT -m string --string ".torrent" --algo bm --to 65535 -j DROP
iptables -A INPUT -m string --string "announce.php?passkey=" --algo bm --to 65535 -j DROP
iptables -A INPUT -m string --string "torrent" --algo bm --to 65535 -j DROP
iptables -A INPUT -m string --string "announce" --algo bm --to 65535 -j DROP
iptables -A INPUT -m string --string "info_hash" --algo bm --to 65535 -j DROP
iptables -A INPUT -m string --string "get_peers" --algo bm --to 65535 -j DROP
iptables -A INPUT -m string --string "find_node" --algo bm --to 65535 -j DROP

iptables -A FORWARD -i tun+ -o eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i tun+ -o eth0 -m state --state INVALID -j REJECT
iptables -A FORWARD -i eth0 -o tun+ -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i eth0 -o tun+ -m state --state INVALID -j REJECT
iptables -A FORWARD -i eth0 -o wg0 -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i eth0 -o wg0 -m state --state INVALID -j REJECT

iptables -t mangle -A PREROUTING -m conntrack --ctstate INVALID -j DROP
iptables -t mangle -A PREROUTING -p tcp -m conntrack --ctstate NEW -m tcpmss ! --mss 536:65535 -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG NONE -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,SYN FIN,SYN -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,RST FIN,RST -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags FIN,ACK FIN -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ACK,URG URG -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ACK,FIN FIN -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ACK,PSH PSH -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL ALL -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL NONE -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL FIN,PSH,URG -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL SYN,FIN,PSH,URG -j DROP
iptables -t mangle -A PREROUTING -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP

iptables -A INPUT -p tcp -m connlimit --connlimit-above 15 --connlimit-mask 48 -j REJECT
iptables -A INPUT -p udp -m connlimit --connlimit-above 12 --connlimit-mask 32 -j REJECT

iptables-save > /etc/firewall.rules
echo "@reboot root iptables-restore < /etc/firewall.rules" >> /etc/crontab
echo -e "${GREEN}[ Selesai ]${PLAIN}";
cd

#################################
# PLUGINS MENU
#################################
echo -n "Muat turun & aktifkan plugins... ";
wget -q -O /usr/local/bin/menu https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/menu.sh
chmod +x /usr/local/bin/menu

# ssh & ovpn
wget -q -O /usr/local/bin/trial_user.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/sshdovpn/trial_user.sh
wget -q -O /usr/local/bin/create_user.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/sshdovpn/create_user.sh
wget -q -O /usr/local/bin/renew_user.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/sshdovpn/renew_user.sh
wget -q -O /usr/local/bin/login_users.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/sshdovpn/login_users.sh
wget -q -O /usr/local/bin/lists_user.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/sshdovpn/lists_user.sh
wget -q -O /usr/local/bin/limit_user.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/sshdovpn/limit_user.sh
wget -q -O /usr/local/bin/kick_user.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/sshdovpn/kick_user.sh
wget -q -O /usr/local/bin/kill_user.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/sshdovpn/kill_user.sh
wget -q -O /usr/local/bin/unlock_user.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/sshdovpn/unlock_user.sh
wget -q -O /usr/local/bin/lock_user.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/sshdovpn/lock_user.sh
wget -q -O /usr/local/bin/delete_user.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/sshdovpn/delete_user.sh

# service
wget -q -O /usr/local/bin/check_service.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/service/check_service.sh
wget -q -O /usr/local/bin/detail_service.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/service/detail_service.sh
wget -q -O /usr/local/bin/ports_service.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/service/ports_service.sh
wget -q -O /usr/local/bin/restart_service.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/service/restart_service.sh

# server
wget -q -O /usr/local/bin/domain_server.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/server/domain_server.sh
wget -q -O /usr/local/bin/backup_server.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/server/backup_server.sh
wget -q -O /usr/local/bin/restore_server.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/server/restore_server.sh
wget -q -O /usr/local/bin/speedtest https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py
wget -q -O /usr/local/bin/detail_server.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/server/detail_server.sh
wget -q -O /usr/local/bin/reboot_server.sh https://raw.githubusercontent.com/cybertize/jokervpn/default/plugins/server/reboot_server.sh

chmod +x /usr/local/bin/*
echo -e "${GREEN}[ Selesai ]${PLAIN}";

echo -n "Memadam dan membersihkan fail... "; sleep 5
rm 1.999.130.tar.gz
rm ddos.zip
rm install
rm -R badvpn-1.999.130
rm -R ddos-deflate-master
apt-get -y -qq autoremove &>/dev/null
apt-get autoclean &>/dev/null
echo -e "${GREEN}[ Selesai ]${PLAIN}";

echo "";
echo "";
echo -e "${YELLOW}Untuk menyelesaikan persediaan pelayan, but/mula semula sistem anda.${PLAIN}";
echo -e "${YELLOW}Taip${PLAIN} ${GREEN}menu${PLAIN} ${YELLOW}untuk senaraikan menu${PLAIN}";
echo "";
